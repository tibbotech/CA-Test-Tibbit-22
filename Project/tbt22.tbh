' RTD data, RTD current, and measurement reference voltage. 
' The ITS-90 standard is used; other RTDs may have 
' coefficients defined by the DIN 43760 or the U.S. Industrial (American) standard. 
#define RTD_A_ITS90         3.9080e-3
#define RTD_A_USINDUSTRIAL  3.9692e-3
#define RTD_A_DIN43760      3.9848e-3
#define RTD_B_ITS90         -5.870e-7
#define RTD_B_USINDUSTRIAL  -5.8495e-7
#define RTD_B_DIN43760      -5.8019e-7

' RTD coefficient C is required only for temperatures below 0 deg. C.
' The selected RTD coefficient set is specified below.
#define RTD_A	RTD_A_ITS90
#define RTD_B	RTD_B_ITS90

' The Fault Detection Cycle Control Bits
#define RTD_FAULT_DETECTION_FINISHED		&h0
#define RTD_FAULT_DETECTION_AUTOMATIC_FAULT	&h04
#define RTD_FAULT_DETECTION_MANUAL_CYCLE_1	&h08
#define RTD_FAULT_DETECTION_MANUAL_CYCLE_2	&h0C

' The Fault Status register latches any detected fault bits.
#define	RTD_FAULT_HIGH_THRESHOLD	&h80	'RTD High Threshold
#define	RTD_FAULT_LOW_THRESHOLD		&h40	'RTD Low Threshold
#define	RTD_FAULT_REFIN				&h20	'REFIN- > 0.85*Vbias
#define	RTD_FAULT_REFIN_FORCE		&h10	'REFIN- < 0.85*Vbias
#define	RTD_FAULT_RTDIN_FORCE		&h08	'RTDIN- < 0.85*Vbias
#define	RTD_FAULT_VOLTAGE			&h04	'Over/Undervoltage
#define RTD_CONFIG_CHECK			&h01

#ifndef TBT22_MAX_NUM_OF_SOCKS
	#define TBT22_MAX_NUM_OF_SOCKS 1
#endif

enum rtd_conv_mode
	tbt22_conversion_with_50_hz_mode,
	tbt22_conversion_with_60_hz_mode
end enum

enum rtd_sensor_type
	PT100=0,
	PT200,
	PT500,
	PT1000
end enum

type tbt22_type
	rtd_init_flag(TBT22_MAX_NUM_OF_SOCKS) as word
	channel(TBT22_MAX_NUM_OF_SOCKS) as byte
	tbt22_normal_0_resistance(TBT22_MAX_NUM_OF_SOCKS) as real
end type

declare function tbt_rtd_init(signature as string, data_pin as byte, clk_pin as byte, int_pin as byte, rst_pin as byte, byref tbt_channel as byte, use_ssi as no_yes)as ok_ng
' Call this function to initialize the Tibbit.
' Use_ssi argument specifies whether you want to communicate with this Tibbit using the SSI channel running in the I2C mode (YES), or
' go for direct I/O manipulation a.k.a. bit-banging (NO).
' Note that there is a limited number of SSI channels so if you set use_ssi=YES this function may return NG, meaning that
' there are no free SSI channels left. This doesn't mean failure. Rather, it means that comms will proceed in bit banging mood.

declare function tbt22_rtd_config(mode as rtd_conv_mode, sensor as rtd_sensor_type, int_pin as byte, tbt_channel as byte)as ok_ng
' MAX31865 provide the notch frequencies for the noise rejection filter.
' Input noise is attenuated by a third-order digital "sinc" filter.Noise from 50Hz or 60Hz power sources(includeing harmonics of the
' ac power's fundamental frequency)is attenuated by 82dB.

declare sub tbt22_rtd_release(tbt_channel as byte)
declare function tbt22_rtd_get_temperature(byref data as real, byref fault_detect as byte, byref fault_status as byte, int_pin as byte, tbt_channel as byte)as ok_ng
declare function tbt22_rtd_fw_version(tbt_channel as byte)as string
